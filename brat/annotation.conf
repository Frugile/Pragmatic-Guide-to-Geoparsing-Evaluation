# Simple text-based definitions of hierarchial ontologies of 
# (physical) entity types, relation types, event types, and
# attributes.

# This is a minimal example configuration, based (loosely) on some
# ACE'05 entity, relation and event definitions
# (http://projects.ldc.upenn.edu/ace/annotation/2005Tasks.html).
# Please edit this according to the needs of your annotation.

[entities]

# Definition of entities.

# Format is a simple list with one type per line.

Literal
Literal_Modifier
Mixed
Non_Toponym
	Embedded_Literal
	Coercion
	Embedded_Non_Lit
Non_Literal_Modifier
Metonymic
Demonym
Language
Homonym
!Augmentation
	Literal_Expression
	Non_Lit_Expression

[relations]

# Definition of (binary) relations.

<OVERLAP>	Arg1:Embedded_Literal, Arg2:Non_Toponym, <OVL-TYPE>:<ANY>
<OVERLAP>	Arg1:Embedded_Non_Lit, Arg2:Non_Toponym, <OVL-TYPE>:<ANY>
<OVERLAP>	Arg1:Coercion, Arg2:Non_Toponym, <OVL-TYPE>:<ANY>

# Format in brief: one relation per line, with first space-separated
# field giving the relation type and the rest of the line the
# comma-separated arguments in ROLE:TYPE format. The roles are
# typically "Arg1" and "Arg2".

[events]

# Definition of events.

[attributes]

# Definition of entity and event attributes.

<Types>=Literal_Modifier|Non_Literal_Modifier|Embedded_Literal|Embedded_Non_Lit|Mixed
<NonLocs>=Non_Lit_Expression|Literal_Expression

Non_Locational	Arg:<NonLocs>
Modifier_Type	Arg:<Types>, Value:Adjective|Noun

# Format in brief: first tab-separated field is attribute name, second
# a set of key-value pairs. The latter must define "Arg:" which
# specifies what the attribute can attach to (typically "<EVENT>").
# If no other keys are defined, the attribute is binary (present or
# absent). If "Value:" with multiple alternatives is defined, the
# attribute can have one of the given values.
